/*
Realizati un program in C in care se citesc de la tastatura n instrumente muzicale. Ultimul instrument muzical este initializat 
automat si este cuvantul 'nai'.
Instrumentele muzicale sunt considerate citite corect daca sunt formate doar din litere mici. Fiecare instrument are dimensiunea maxima = 10 caractere.
Realizati un meniu interactiv cu urmatoarele optiuni :
1.Afisarea instrumentelor muzicale din lista.
2.Calcularea sumei lungimilor instrumentelor muzicale si reprezentarea ei in baza 2.
3.Afisarea numarului de biti pe 1 pentru fiecare lungime de instrument muzical.
4.Sa se puna pe diagonala secundara a unei matrice patratice de ordin de numarul de instrumente muzicale lungimea minima din vectorul de instrumente.
Pe restul elementelor se va pune 0.
0.Iesire.
OBS! Se va utiliza alocarea dinamica de memorie.
*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    int n, i, j, k, ok, s = 0, poz, nr, aux;
    char **nume, a[10];

    printf("n= ");
    scanf("%d", &n);

    nume = (char**)malloc(n * sizeof(char *));

    if(a == NULL)
        {
            printf("Eroare!");
            return 0;
        }

    for(i = 0; i < n - 1; i++)
        {
            
            do
            {
                k = 1;
                printf("Instrumentul %d : ", i + 1);
                scanf("%s", a);

                nume[i] = (char*)malloc((strlen(a) + 1) * sizeof(char));
                if(nume[i] == NULL)
                    {
                        printf("eroare");
                        return 0;
                    }
                strcpy(nume[i], a);
                for(j = 0; j < strlen(nume[i]); j++)
                    if(nume[i][j] < 97 || nume[i][j] > 122)
                        k = 0;
            }while(k == 0);
        }
    nume[i] = (char*)malloc(4 * sizeof(char));
    if(nume[i] == NULL)
        {
            printf("eroare");
                return 0;
        }
    strcpy(nume[i], "nai");

    do
    {
        printf("\n");
        printf("Introduceti una dintre urmatoarele optiuni:\n");
        printf("1.Afisarea instrumentelor muzicale din lista.\n");
        printf("2.Calcularea sumei lungimilor instrumentelor muzicale si reprezentarea ei in baza 2.\n");
        printf("3.Afisarea numarului de biti pe 1 pentru fiecare lungime de instrument muzical.\n");
        printf("4.Afisarea unei matrice cu elementele de pe diagonala secundara egale cu minimul din lungimile\n");
        scanf("%d", &ok);

        switch(ok)
        {
            case 1:
                    printf("\n");
                    printf("Instrumentele sunt: ");
                    for(i = 0; i < n; i++)
                        printf("%s, ", nume[i]);
                    printf("\n");
                break;

            case 2:
                    printf("\n");
                    for(i = 0; i < n; i++)
                        s = s + strlen(nume[i]);
                    printf("suma este %d\n", s);
                    for(i = 7; i >= 0; i--)
                        if(((s >> i) & 1) == 1)
                            printf("1");
                        else
                            printf("0");
                    printf("\n");
                break;

            case 3:
                    printf("\n");
                    for(i = 0; i < n; i++)
                        {
                            nr = 0;
                            aux = strlen(nume[i]);
                            for(poz = 0; poz < 8; poz++)
                                if(((aux >> poz) & 1) == 1)
                                    nr++;
                            printf("Lungimea sirului %s are %d biti pe 1.\n", nume[i], nr);
                        }
                    printf("\n");
                break;
            
            case 4:
                    printf("\n");
                    
                    free(m);
                    printf("\n");
                break;

            case 0:
                break;
                
            default:
                    printf("Introduceti o valoare corecta!");
                break;
            free(v);
        }
    } while (ok != 0);
    
    return 0;
}
